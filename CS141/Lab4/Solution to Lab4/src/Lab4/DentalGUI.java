package Lab4;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * <pre>
 * File         DentalBillGUI.java
 * Project      Lab 4
 * Description  This class provides the main GUI application.
 * Platform     Mac, Big Sur 11.2.3, jdk 1.8.0_241, NetBeans IDE 12.3
 * Date         4/30/2021
 * History Log
 * @author      <i>Robert Tang</i>
 * @version 1.0.0
 * @see javax.swing.JDialog
 * @see java.awt.Toolkit
 * @see java.awt.Color
 * </pre>
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */
public class DentalGUI extends javax.swing.JFrame {

    private final String FILE_LOCATION = "./src/Lab4/patients.txt";

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           DentalGUI()
     * Description      Creates new form DentalGUI
     * Date 4/30/2021
     * @throws IOException if thing goes wrong.
     * @author          <i>Robert Tang</i>
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    public DentalGUI() throws IOException {
        initComponents();

        // centers the form at start
        this.setLocationRelativeTo(null);

        // set default button on calculate
        this.getRootPane().setDefaultButton(calculateJButton);

        // set date on title bar
        this.setDate();

        // import names of patients
        this.importPatientNames();

    }

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           setDate()
     * Description      Set current date the title bar.
     * @author          <i>Robert Tang</i>
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void setDate() {
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        Date now = new Date();
        this.setTitle("Dental Payment Form " + dateFormat.format(now));
    }

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           importPatientNames()
     * Description      Import patiens' names from an external file.
     * @author          <i>Robert Tang</i>
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void importPatientNames() {
        try {
            BufferedReader bufferedReder = new BufferedReader(new FileReader(FILE_LOCATION));
            String patientName;

            while ((patientName = bufferedReder.readLine()) != null) {
                patiensJComboBox.addItem(patientName);
            }
        } catch (FileNotFoundException ex) {
            System.out.print("File Open Error: " + ex.getMessage());
        } catch (IOException ex) {
            System.out.print("File IO Error: " + ex.getMessage());
        } catch (Exception ex) {
            System.out.print("Invalid input: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientJPanel = new javax.swing.JPanel();
        cleaningJLabel1 = new javax.swing.JLabel();
        patiensJComboBox = new javax.swing.JComboBox<>();
        serviceJPanel = new javax.swing.JPanel();
        cleaningJCheckBox = new javax.swing.JCheckBox();
        cleaningJLabel = new javax.swing.JLabel();
        cavityJCheckBox = new javax.swing.JCheckBox();
        cavityJLabel = new javax.swing.JLabel();
        xrayJCheckBox = new javax.swing.JCheckBox();
        xrayJLabel = new javax.swing.JLabel();
        fluorideJCheckBox = new javax.swing.JCheckBox();
        fluorideJLabel = new javax.swing.JLabel();
        rootCanalJCheckBox = new javax.swing.JCheckBox();
        rootCanalJLabel = new javax.swing.JLabel();
        otherJCheckBox = new javax.swing.JCheckBox();
        otherJFormattedTextField = new javax.swing.JFormattedTextField();
        totalJLabel = new javax.swing.JLabel();
        totalJTextField = new javax.swing.JTextField();
        displayJPanel = new javax.swing.JPanel();
        outJScrollPane = new javax.swing.JScrollPane();
        outJTextArea = new javax.swing.JTextArea();
        controlJPanel = new javax.swing.JPanel();
        calculateJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();
        dentalJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        saveJMenuItem = new javax.swing.JMenuItem();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        printformJMenuItem = new javax.swing.JMenuItem();
        quitJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/Lab4/Parrot.jpg")).getImage());
        setResizable(false);
        setSize(new java.awt.Dimension(300, 500));

        patientJPanel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        cleaningJLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cleaningJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cleaningJLabel1.setText("Patient Name:");

        patiensJComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        patiensJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        patiensJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patiensJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout patientJPanelLayout = new javax.swing.GroupLayout(patientJPanel);
        patientJPanel.setLayout(patientJPanelLayout);
        patientJPanelLayout.setHorizontalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(cleaningJLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patiensJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        patientJPanelLayout.setVerticalGroup(
            patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientJPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(patientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patiensJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleaningJLabel1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        cleaningJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cleaningJCheckBox.setText("Cleaning");

        cleaningJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cleaningJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cleaningJLabel.setText("$135");

        cavityJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cavityJCheckBox.setText("Cavity Filling");

        cavityJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cavityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cavityJLabel.setText("$170");

        xrayJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        xrayJCheckBox.setText("X-Ray");

        xrayJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        xrayJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xrayJLabel.setText("$85");

        fluorideJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        fluorideJCheckBox.setText("Fluoride");

        fluorideJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        fluorideJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fluorideJLabel.setText("$35");

        rootCanalJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rootCanalJCheckBox.setText("Root Canal");

        rootCanalJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        rootCanalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rootCanalJLabel.setText("$900");

        otherJCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        otherJCheckBox.setText("Other");
        otherJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherJCheckBoxActionPerformed(evt);
            }
        });

        otherJFormattedTextField.setEditable(false);
        otherJFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        otherJFormattedTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        otherJFormattedTextField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        totalJLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        totalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalJLabel.setText("Total:");

        totalJTextField.setEditable(false);
        totalJTextField.setBackground(new java.awt.Color(51, 255, 102));
        totalJTextField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        totalJTextField.setForeground(new java.awt.Color(51, 51, 51));
        totalJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout serviceJPanelLayout = new javax.swing.GroupLayout(serviceJPanel);
        serviceJPanel.setLayout(serviceJPanelLayout);
        serviceJPanelLayout.setHorizontalGroup(
            serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(serviceJPanelLayout.createSequentialGroup()
                        .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rootCanalJCheckBox)
                            .addComponent(fluorideJCheckBox)
                            .addComponent(cavityJCheckBox)
                            .addComponent(xrayJCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(xrayJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fluorideJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rootCanalJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cavityJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(serviceJPanelLayout.createSequentialGroup()
                        .addComponent(cleaningJCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cleaningJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(serviceJPanelLayout.createSequentialGroup()
                        .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(serviceJPanelLayout.createSequentialGroup()
                                .addComponent(otherJCheckBox)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(totalJLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(otherJFormattedTextField))))
                .addGap(15, 15, 15))
        );
        serviceJPanelLayout.setVerticalGroup(
            serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceJPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cleaningJCheckBox)
                    .addComponent(cleaningJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cavityJCheckBox)
                    .addComponent(cavityJLabel))
                .addGap(14, 14, 14)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xrayJLabel)
                    .addComponent(xrayJCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fluorideJCheckBox)
                    .addComponent(fluorideJLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rootCanalJCheckBox)
                    .addComponent(rootCanalJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otherJCheckBox)
                    .addComponent(otherJFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(serviceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalJLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        outJTextArea.setEditable(false);
        outJTextArea.setColumns(1);
        outJTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        outJTextArea.setRows(5);
        outJTextArea.setTabSize(4);
        outJTextArea.setAutoscrolls(false);
        outJScrollPane.setViewportView(outJTextArea);

        javax.swing.GroupLayout displayJPanelLayout = new javax.swing.GroupLayout(displayJPanel);
        displayJPanel.setLayout(displayJPanelLayout);
        displayJPanelLayout.setHorizontalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayJPanelLayout.setVerticalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayJPanelLayout.createSequentialGroup()
                .addComponent(outJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        controlJPanel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        calculateJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        calculateJButton.setMnemonic('C');
        calculateJButton.setText("Calculate");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });

        quitJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });

        clearJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        clearJButton.setMnemonic('r');
        clearJButton.setText("Clear");
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });

        saveJButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlJPanelLayout = new javax.swing.GroupLayout(controlJPanel);
        controlJPanel.setLayout(controlJPanelLayout);
        controlJPanelLayout.setHorizontalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlJPanelLayout.createSequentialGroup()
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(calculateJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(controlJPanelLayout.createSequentialGroup()
                        .addComponent(clearJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        controlJPanelLayout.setVerticalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");

        saveJMenuItem.setMnemonic('S');
        saveJMenuItem.setText("Save");
        saveJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(saveJMenuItem);

        clearJMenuItem.setMnemonic('r');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        printformJMenuItem.setMnemonic('F');
        printformJMenuItem.setText("Print Form");
        printformJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printformJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printformJMenuItem);

        quitJMenuItem.setMnemonic('Q');
        quitJMenuItem.setText("Quit");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(quitJMenuItem);

        dentalJMenuBar.add(fileJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        aboutJMenuItem.setMnemonic('A');
        aboutJMenuItem.setText("About");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        dentalJMenuBar.add(helpJMenu);

        setJMenuBar(dentalJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patientJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serviceJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(patientJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           clearJMenuItemActionPerformed()
     * Description      Button action to clear all fields.
     * @author          <i>Robert Tang</i>
     * @param evt Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJMenuItemActionPerformed
        clearJButton.doClick();
    }//GEN-LAST:event_clearJMenuItemActionPerformed
    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           printJMenuItemActionPerformed()
     * Description      Button action to print form.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void printformJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printformJMenuItemActionPerformed
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_printformJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           quitJMenuItemActionPerformed()
     * Description      Menu action to exit the program.
     * @author          <i>Robert Tang</i>
     * @param evt
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        quitJButton.doClick();
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           aboutJMenuItemActionPerformed()
     * Description      Menu action to show the about form.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItemActionPerformed
        About instanceAbout = new About(this, true);
        instanceAbout.setVisible(true);
    }//GEN-LAST:event_aboutJMenuItemActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           quitJMenuItem1ActionPerformed()
     * Description      Button action to exit the program.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           calculateJButtonActionPerformed()
     * Description      Button action to calculates a dental bill.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed

        try {
            // get patient name
            String patientName = patiensJComboBox.getSelectedItem().toString().trim();

            // Get service items
            Boolean cleaning = cleaningJCheckBox.isSelected();
            Boolean cavity = cavityJCheckBox.isSelected();
            Boolean xray = xrayJCheckBox.isSelected();
            Boolean fluoride = fluorideJCheckBox.isSelected();
            Boolean rootCanal = rootCanalJCheckBox.isSelected();
            Boolean other = otherJCheckBox.isSelected();
            Double otherAmount = other && !otherJFormattedTextField.getText().isEmpty() ? Double.parseDouble(otherJFormattedTextField.getText()) : 0.0;

            if (patientName.isEmpty()) {
                // display error message
                JOptionPane.showMessageDialog(null,
                        "Please select a patient.",
                        "Missing Information", JOptionPane.WARNING_MESSAGE);
            } else if (!(cleaning || cavity || xray || fluoride || rootCanal || other)) {
                // display error message
                JOptionPane.showMessageDialog(null,
                        "Please check at least one service.",
                        "Missing Information", JOptionPane.WARNING_MESSAGE);

            } else if (other && otherAmount <= 0.0) {
                // display error message
                JOptionPane.showMessageDialog(null,
                        "Please fill in a positive number for other amount",
                        "Missing Information", JOptionPane.WARNING_MESSAGE);
                otherJFormattedTextField.requestFocus();
                otherJFormattedTextField.selectAll();

            } else if (otherAmount > 50000) {
                JOptionPane.showMessageDialog(null,
                        "Other amount cannot greater than $50,000",
                        "Missing Information", JOptionPane.WARNING_MESSAGE);
                otherJFormattedTextField.requestFocus();
                otherJFormattedTextField.selectAll();
            } else {

                DentalBill instanceOfDentalBill = new DentalBill();
                instanceOfDentalBill.calculateDentalBill(patientName, cleaning, cavity, xray, fluoride, rootCanal, otherAmount);

                DecimalFormat dollar = new DecimalFormat("$#,##0.00");
                totalJTextField.setText(String.valueOf(dollar.format(instanceOfDentalBill.getAmount())));
                outJTextArea.setText(instanceOfDentalBill.displayBill().toString());

            }

        } catch (HeadlessException | NumberFormatException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_calculateJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           otherJCheckBoxActionPerformed()
     * Description      Change event of the checkbox of other amount.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void otherJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherJCheckBoxActionPerformed
        if (otherJCheckBox.isSelected()) { // checked
            otherJFormattedTextField.setEditable(true);
            otherJFormattedTextField.requestFocus();
        } else { // unchecked
            otherJFormattedTextField.setText("");
            otherJFormattedTextField.setEditable(false);
        }

    }//GEN-LAST:event_otherJCheckBoxActionPerformed
    
    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           clearJButtonActionPerformed()
     * Description      button action to clears all fields
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJButtonActionPerformed
        patiensJComboBox.setSelectedIndex(0);
        cleaningJCheckBox.setSelected(false);
        cavityJCheckBox.setSelected(false);
        xrayJCheckBox.setSelected(false);
        fluorideJCheckBox.setSelected(false);
        rootCanalJCheckBox.setSelected(false);
        otherJCheckBox.setSelected(false);

        otherJFormattedTextField.setText("");
        totalJTextField.setText("");
        outJTextArea.setText("");
    }//GEN-LAST:event_clearJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           saveJButtonActionPerformed()
     * Description      save a bill data to an external file
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed

        if (outJTextArea.getText().trim().isEmpty()) {
            // display error message
            JOptionPane.showMessageDialog(null,
                    "There is nothing to save. Please calculate a bill first.",
                    "Missing Information", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files(*.txt)", "txt"));
                fileChooser.setDialogTitle("Specify a file to save");

                int userSelection = fileChooser.showSaveDialog(null);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    File fileToSave = fileChooser.getSelectedFile();
                    System.out.println("Save as file: " + fileToSave.getAbsolutePath());

                    BufferedWriter bwr;

                    bwr = new BufferedWriter(new FileWriter(new File(fileToSave.getAbsolutePath())));
                    bwr.write(outJTextArea.getText());
                    bwr.flush();
                    bwr.close();

                    // display confirmation
                    JOptionPane.showMessageDialog(null,
                            "Bill has saved to file.",
                            "Bill saved", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (IOException | HeadlessException ex) {
                Logger.getLogger(DentalGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_saveJButtonActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           patiensJComboBoxActionPerformed()
     * Description      change event of patiensJComboBox
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void patiensJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patiensJComboBoxActionPerformed
        outJTextArea.setText("");
    }//GEN-LAST:event_patiensJComboBoxActionPerformed

    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           saveJMenuItemActionPerformed()
     * Description      Menu action to save a bill.
     * @author          <i>Robert Tang</i>
     * @param evt 
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    private void saveJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJMenuItemActionPerformed
        saveJButton.doClick();
    }//GEN-LAST:event_saveJMenuItemActionPerformed

    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItemActionPerformed
        try {
            outJTextArea.print();
        } catch (PrinterException ex) {
            Logger.getLogger(DentalGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printJMenuItemActionPerformed
    
    /**
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     * <pre>
     * Method           main()
     * Description      main method of dental GUI.
     * @author          <i>Robert Tang</i>
     * @param args the command line arguments
     * Date 4/30/2021
     * </pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Splash instanceOfSplash = new Splash(2000);
        instanceOfSplash.showSplash();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new DentalGUI().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(DentalGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JCheckBox cavityJCheckBox;
    private javax.swing.JLabel cavityJLabel;
    private javax.swing.JCheckBox cleaningJCheckBox;
    private javax.swing.JLabel cleaningJLabel;
    private javax.swing.JLabel cleaningJLabel1;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JMenuBar dentalJMenuBar;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JCheckBox fluorideJCheckBox;
    private javax.swing.JLabel fluorideJLabel;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JCheckBox otherJCheckBox;
    private javax.swing.JFormattedTextField otherJFormattedTextField;
    private javax.swing.JScrollPane outJScrollPane;
    private javax.swing.JTextArea outJTextArea;
    private javax.swing.JComboBox<String> patiensJComboBox;
    private javax.swing.JPanel patientJPanel;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JMenuItem printformJMenuItem;
    private javax.swing.JButton quitJButton;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JCheckBox rootCanalJCheckBox;
    private javax.swing.JLabel rootCanalJLabel;
    private javax.swing.JButton saveJButton;
    private javax.swing.JMenuItem saveJMenuItem;
    private javax.swing.JPanel serviceJPanel;
    private javax.swing.JLabel totalJLabel;
    private javax.swing.JTextField totalJTextField;
    private javax.swing.JCheckBox xrayJCheckBox;
    private javax.swing.JLabel xrayJLabel;
    // End of variables declaration//GEN-END:variables
}
